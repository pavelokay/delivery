@page "/admin/addProduct"

@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]

@inject IProductDataProvider _productDataProvider
@inject ICategoryDataProvider _categoryDataProvider
@inject IManufacturerDataProvider _manufacturerDataProvider


<h3>Добавить товар</h3>

<EditForm Model="@_newProduct" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText id="name" @bind-Value="_newProduct.Name" />
    <InputText id="slug" @bind-Value="_newProduct.Slug" />
    <InputSelect id="category" @bind-Value="_newProduct.CategoryId">
        @foreach (var category in _categories)
        {
            <option value="@category.Id">@category.Name</option>
        }
    </InputSelect>
    <InputSelect id="manufacturer" @bind-Value="_newProduct.Manufacturer">
        @foreach (var manufacturer in _manufacturers)
        {
            <option value="@manufacturer.Id">@manufacturer.Name</option>
        }
    </InputSelect>
    <InputTextArea id="description" @bind-Value="_newProduct.Description" />
    <InputFile @bind-Value="@_newProduct.ProductImages">Добавить изображение</InputFile>

    <button type="submit">Создать</button>
</EditForm>


    @code {
        private ProductModel _newProduct;
        private IEnumerable<CategoryModel> _categories;
        private IEnumerable<ManufacturerModel> _manufacturers;


        protected async override Task OnInitializedAsync()
        {
            _categories = await _categoryDataProvider.GetCategories();
            _manufacturers = await _manufacturerDataProvider.GetManufacturers();
        }

        private void HandleValidSubmit()
        {
            _productDataProvider.CreateProduct(_newProduct);
        }
    }
