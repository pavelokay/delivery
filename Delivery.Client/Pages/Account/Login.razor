@page "/account/login"

@using Application.Models.Account

@inject IAuthenticationDataProvider _authenticationDataProvider
@inject NavigationManager _navigationManager

<h3>Login</h3>

<div class="row">
    <div class="col-md-4">
        <EditForm Model="_loginUserModel" OnValidSubmit="HandleLogin" class="card card-body bg-light mt-5">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group row">
                <label for="username" class="col-md-2 col-form-label">Имя пользователя:</label>
                <div class="col-md-10">
                    <InputText id="username" class="form-control" @bind-Value="_loginUserModel.UserName" />
                </div>
            </div>

            <div class="form-group row">
                <label for="password" class="col-md-2 col-form-label">Пароль:</label>
                <div class="col-md-10">
                    <InputText type="password" id="password" class="form-control" @bind-Value="_loginUserModel.Password" />
                </div>
            </div>

            <div>
                <div class="col-md-12 text-right">
                    <button type="submit" class="btn btn-success">Регистрация</button>
                </div>
            </div>

        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public string ReturnUrl { get; set; } = "/";

    private LoginUserModel _loginUserModel = new LoginUserModel();


    public async Task HandleLogin()
    {
        await _authenticationDataProvider.LoginUser(_loginUserModel);
        _navigationManager.NavigateTo(ReturnUrl);
    }
}

